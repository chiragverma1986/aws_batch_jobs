{
  "Parameters": {
    "Environment": {
      "Default": "dev",
      "Description": "Must be one of the following: dev,maui,mock,corp",
      "Type": "String"
    },
    "ECSRepositoryURI": {
      "Description": "Repository must exist before the deployment of this template.",
      "Type": "String"
    },
    "ImageVersion": {
      "Description": "Version Number of the docker image",
      "Default": "1.1",
      "Type": "String"
    },
    "JobName": {
      "Description": "Name of the Job",
      "Type": "String"
    },
    "JobQueue": {
      "Description": "Name of the JobQueue",
      "Default": "JobQueue",
      "Type": "String"
    },
    "JobDefinitionName": {
      "Description": "Name of the JobDefinition, It can be same as JobName",
      "Type": "String"
    },
    "JobTimeout": {
      "Description": "Job Timeout",
      "Type": "String",
      "Default": 14400
    },
    "Memory": {
      "Description": "Amount of Memory needed for the Job",
      "Type": "String",
      "Default": 16384
    },
    "Vcpus": {
      "Description": "No of CPU's needed for the Job",
      "Type": "String",
      "Default": "4"
    },
    "AWSAccountId": {
      "Description": "The AWS Account ID",
      "Type": "String",
      "Default": "1"
    }
  },
  "Mappings": {
    "EnvMap": {
      "dev": {
        "DBSecret": "secrets",
        "Database": "db",
        "Catalog": "AwsDataCatalog",
        "CrossAccountID": 7,
        "AWSRcpAccountId": "4",
        "AthenaOutputS3Bucket": "aws2"
      },
      "shadow": {
        "DBSecret": "secrets",
        "Database": "db",
        "Catalog": "AwsDataCatalog",
        "CrossAccountID": 3,
        "AWSRcpAccountId": "4",
        "AthenaOutputS3Bucket": "aws1"
      }
  },
  "Resources": {
    "BatchContainerIAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "JobName"
              },
              "Role",
              {
                "Ref": "Environment"
              }
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ecs-tasks.amazonaws.com",
                  "events.amazonaws.com"
                ],
                "AWS": {
                  "Fn::Sub": [
                    "arn:aws:iam::${AWSAccountId}:root",
                    {
                      "AWSAccountId": {
                        "Fn::FindInMap": [
                          "EnvMap",
                          {
                            "Ref": "Environment"
                          },
                          "AWSAccountId"
                        ]
                      }
                    }
                  ]
                }
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "BatchContainer",
                  {
                    "Ref": "Environment"
                  }
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "batch:SubmitJob",
                    "batch:DescribeJobs"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    "arn:aws:s3:::*-f-*",
                    "arn:aws:s3:::aws-athena-query-results-*"
                  ]
                },
                {
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds"
                  ],
                  "Resource": [
                    "arn:aws:secretsmanager:*:secret:/s/*",
                    "arn:aws:secretsmanager:*:secret:/e/*",
                    "arn:aws:secretsmanager:*:secret:/p/*"
                  ],
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogStreams"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "athena:*",
                    "glue:*"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Effect": "Allow",
                  "Action": "glue:*",
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:aws:glue:${AWS::Region}:${CrossAccountID}:catalog",
                        {
                          "CrossAccountID": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "CrossAccountID"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:glue:${AWS::Region}:${CrossAccountID}:database/${Database}",
                        {
                          "CrossAccountID": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "CrossAccountID"
                            ]
                          },
                          "Database": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "Database"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:glue:${AWS::Region}:${CrossAccountID}:table/${Database}/hdr_json",
                        {
                          "CrossAccountID": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "CrossAccountID"
                            ]
                          },
                          "Database": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "Database"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:glue:${AWS::Region}:${CrossAccountID}:table/${Database}/hdr",
                        {
                          "CrossAccountID": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "CrossAccountID"
                            ]
                          },
                          "Database": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "Database"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:glue:${AWS::Region}:${CrossAccountID}:table/${Database}/detail_json",
                        {
                          "CrossAccountID": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "CrossAccountID"
                            ]
                          },
                          "Database": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "Database"
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:glue:${AWS::Region}:${CrossAccountID}:table/${Database}/detail",
                        {
                          "CrossAccountID": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "CrossAccountID"
                            ]
                          },
                          "Database": {
                            "Fn::FindInMap": [
                              "EnvMap",
                              {
                                "Ref": "Environment"
                              },
                              "Database"
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "BookingLoader": {
      "Type": "AWS::Batch::JobDefinition",
      "Properties": {
        "Type": "Container",
        "PropagateTags": true,
        "Tags": {
          "Application": "Application",
          "AssetProtectionLevel": "AssetProtectionLevel",
          "Brand": "Brand",
          "CostCenter": "CostCenter",
          "Team": "Team",
          "Name": "Name"
        },
        "ContainerProperties": {
          "Command": [
            "bash",
            "trigger.sh"
          ],
          "Memory": {
            "Ref": "Memory"
          },
          "JobRoleArn": {
            "Ref": "BatchContainerIAMRole"
          },
          "Vcpus": {
            "Ref": "Vcpus"
          },
          "Image": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "ECSRepositoryURI"
                },
                ":",
                {
                  "Ref": "ImageVersion"
                }
              ]
            ]
          },
          "Environment": [
            {
              "Name": "Environment",
              "Value": {
                "Ref": "Environment"
              }
            },
            {
              "Name": "Database",
              "Value": {
                "Fn::FindInMap": [
                  "EnvMap",
                  {
                    "Ref": "Environment"
                  },
                  "Database"
                ]
              }
            },
            {
              "Name": "Catalog",
              "Value": {
                "Fn::FindInMap": [
                  "EnvMap",
                  {
                    "Ref": "Environment"
                  },
                  "Catalog"
                ]
              }
            },
            {
              "Name": "AthenaOutputS3Bucket",
              "Value": {
                "Fn::FindInMap": [
                  "EnvMap",
                  {
                    "Ref": "Environment"
                  },
                  "AthenaOutputS3Bucket"
                ]
              }
            },
            {
              "Name": "DBSecret",
              "Value": {
                "Fn::FindInMap": [
                  "EnvMap",
                  {
                    "Ref": "Environment"
                  },
                  "DBSecret"
                ]
              }
            },
            {
              "Name": "JobType",
              "Value": "non_recon"
            },
            {
              "Name": "JobStart",
              "Value": "NA"
            },
            {
              "Name": "JobEnd",
              "Value": "NA"
            }
          ]
        },
        "JobDefinitionName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "JobName"
              },
              {
                "Ref": "Environment"
              }
            ]
          ]
        },
        "RetryStrategy": {
          "Attempts": 3
        },
        "Timeout": {
          "AttemptDurationSeconds": {
            "Ref": "JobTimeout"
          }
        }
      }
    },
    "CloudWatchEventRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Rule to trigger the batch job",
        "ScheduleExpression": "cron(1 * * * ? *)",
        "Name": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "JobName"
              },
              {
                "Ref": "Environment"
              }
            ]
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:batch:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":job-queue/",
                  {
                    "Ref": "JobQueue"
                  }
                ]
              ]
            },
            "BatchParameters": {
              "JobDefinition": {
                "Ref": "BookingLoader"
              },
              "JobName": {
                "Ref": "JobName"
              }
            },
            "Id": "Batch_Target",
            "RoleArn": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:iam::",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":role/",
                  {
                    "Ref": "BatchContainerIAMRole"
                  }
                ]
              ]
            }
          }
        ]
      }
    }
  }
}
